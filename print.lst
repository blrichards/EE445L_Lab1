


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000         
   17 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   18 00000000                 THUMB
   19 00000000         
   20 00000000 00000004 
                       res     EQU              4
   21 00000000 00000000 
                       div     EQU              0
   22 00000000 00000000 
                       val     EQU              0
   23 00000000         
   24 00000000         
   25 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   26 00000000         ; Output a 32-bit number in unsigned decimal format
   27 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   28 00000000         ; Output: none
   29 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   30 00000000         LCD_OutDec
   31 00000000 E92D 4FE0       PUSH             {R5-R11, LR} ;keep these save
   32 00000004 46EB            MOV              R11, SP
   33 00000006 4605            MOV              R5, R0      ;save input
   34 00000008 280A            CMP              R0, #10
   35 0000000A D30F            BLO              ascii       ;see if you can out
                                                            put the value yet
   36 0000000C F04F 010A       MOV              R1, #10     ;move divisor of 10
                                                             in R1
   37 00000010 FBB0 F2F1       UDIV             R2, R0, R1  ;divide the input b
                                                            y 10
   38 00000014 FB01 F302       MUL              R3, R1, R2  ;get the result and
                                                             divisor and sub
   39 00000018 EBA0 0303       SUB              R3, R0, R3  ;subtract the input
                                                             by what you got ou
                                                            t
   40 0000001C F8CB 3000       STR              R3, [R11, #val]
   41 00000020 0010            MOVS             R0, R2      ;move the results a
                                                            s a new input
   42 00000022 F7FF FFFE       BL               LCD_OutDec  ;input that back in



ARM Macro Assembler    Page 2 


                                                            to the function
   43 00000026 F8DB 2000       LDR              R2, [R11, #val]
   44 0000002A 0010            MOVS             R0, R2
   45 0000002C         ascii
   46 0000002C F100 0030       ADD              R0, R0, #0x30
   47 00000030 F7FF FFFE       BL               ST7735_OutChar
   48 00000034 E8BD 4FE0       POP              {R5-R11, LR} ;return to origion
                                                            al
   49 00000038 4770            BX               LR
   50 0000003A         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   51 0000003A         
   52 0000003A         ; -----------------------LCD _OutFix--------------------
                       --
   53 0000003A         ; Output characters to LCD display in fixed-point format
                       
   54 0000003A         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   55 0000003A         ; Inputs:  R0 is an unsigned 32-bit number
   56 0000003A         ; Outputs: none
   57 0000003A         ; E.g., R0=0,    then output "0.000 "
   58 0000003A         ;       R0=3,    then output "0.003 "
   59 0000003A         ;       R0=89,   then output "0.089 "
   60 0000003A         ;       R0=123,  then output "0.123 "
   61 0000003A         ;       R0=9999, then output "9.999 "
   62 0000003A         ;       R0>9999, then output "*.*** "
   63 0000003A         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   64 0000003A         LCD_OutFix
   65 0000003A E92D 4FE0       PUSH             {R5-R11, LR} ;keep these saved
   66 0000003E 46EB            MOV              R11, SP     ;save the SP
   67 00000040 4605            MOV              R5, R0      ;save initial value
                                                            
   68 00000042 F44F 727A       MOV              R2, #1000   ;store the divisor
   69 00000046 FBB0 F1F2       UDIV             R1, R0, R2
   70 0000004A 460B            MOV              R3, R1
   71 0000004C 290A            CMP              R1, #10     ;see if >10000 then
                                                             all astriks ouputt
                                                            ed
   72 0000004E D249            BHS              greater10k
   73 00000050 4608            MOV              R0, R1      ;move result in dum
                                                            my register
   74 00000052 F100 0030       ADD              R0, R0, #0x30
   75 00000056 F8CB 3004       STR              R3, [R11, #res]
   76 0000005A F8CB 2000       STR              R2, [R11, #div]
   77 0000005E F7FF FFFE       BL               ST7735_OutChar ;output first re
                                                            sult
   78 00000062 F04F 002E       MOV              R0, #0x2E
   79 00000066 F7FF FFFE       BL               ST7735_OutChar ;output "."
   80 0000006A F8DB 3004       LDR              R3, [R11, #res]
   81 0000006E F8DB 2000       LDR              R2, [R11, #div]
   82 00000072 FB03 F102       MUL              R1, R3, R2  ;get value to subtr
                                                            act
   83 00000076 1A6D            SUBS             R5, R5, R1
   84 00000078 4628            MOV              R0, R5      ;new value to work 
                                                            with after divide b
                                                            y 1000
   85 0000007A F04F 0264       MOV              R2, #100    ;new divisor of 100
                                                            
   86 0000007E FBB0 F1F2       UDIV             R1, R0, R2  ;new value



ARM Macro Assembler    Page 3 


   87 00000082 460B            MOV              R3, R1
   88 00000084 F101 0130       ADD              R1, #0x30   ;ascii value
   89 00000088 4608            MOV              R0, R1      ;copy to output to 
                                                            function
   90 0000008A F8CB 3004       STR              R3, [R11, #res]
   91 0000008E F8CB 2000       STR              R2, [R11, #div]
   92 00000092 F7FF FFFE       BL               ST7735_OutChar
   93 00000096 F8DB 3004       LDR              R3, [R11, #res]
   94 0000009A F8DB 2000       LDR              R2, [R11, #div]
   95 0000009E FB03 F102       MUL              R1, R3, R2  ;value to sutract
   96 000000A2 EBA5 0501       SUB              R5, R5, R1
   97 000000A6 4628            MOV              R0, R5
   98 000000A8 F04F 020A       MOV              R2, #10     ;new divisor of 10
   99 000000AC FBB0 F1F2       UDIV             R1, R0, R2  ;new value
  100 000000B0 460B            MOV              R3, R1
  101 000000B2 F101 0130       ADD              R1, #0x30   ;ascii value
  102 000000B6 4608            MOV              R0, R1
  103 000000B8 F8CB 3004       STR              R3, [R11, #res]
  104 000000BC F8CB 2000       STR              R2, [R11, #div]
  105 000000C0 F7FF FFFE       BL               ST7735_OutChar
  106 000000C4 F8DB 3004       LDR              R3, [R11, #res]
  107 000000C8 F8DB 2000       LDR              R2, [R11, #div]
  108 000000CC FB03 F102       MUL              R1, R3, R2
  109 000000D0 EBA5 0501       SUB              R5, R5, R1  ;should give you th
                                                            e last value to wor
                                                            k with
  110 000000D4 4628            MOV              R0, R5
  111 000000D6 F100 0030       ADD              R0, #0x30
  112 000000DA F7FF FFFE       BL               ST7735_OutChar ;4th and final o
                                                            utput
  113 000000DE         done
  114 000000DE E8BD 4FE0       POP              {R5-R11, LR}
  115 000000E2 4770            BX               LR
  116 000000E4         greater10k
  117 000000E4 F04F 002A       MOV              R0, #0x2A   ;ascii for "*"
  118 000000E8 F7FF FFFE       BL               ST7735_OutChar ;output the *
  119 000000EC F04F 002E       MOV              R0, #0x2E
  120 000000F0 F7FF FFFE       BL               ST7735_OutChar ;output "."
  121 000000F4 F04F 0103       MOV              R1, #3      ;counter to output 
                                                            3 more *
  122 000000F8         loop10
  123 000000F8 F04F 002A       MOV              R0, #0x2A   ;move "*" into R0
  124 000000FC B406            PUSH             {R1, R2}    ;save R1 which is t
                                                            he counte
  125 000000FE F7FF FFFE       BL               ST7735_OutChar
  126 00000102 BC06            POP              {R1, R2}    ;reload the counter
                                                            
  127 00000104 3901            SUBS             R1, #1      ;decrament the coun
                                                            ter
  128 00000106 D1F7            BNE              loop10      ;makes sure to outp
                                                            ut only 3 "*"
  129 00000108 E7E9            B                done        ;return to where yo
                                                            u came from
  130 0000010A         
  131 0000010A         
  132 0000010A         
  133 0000010A         
  134 0000010A 00 00           ALIGN
  135 0000010C         ;* * * * * * * * End of LCD_OutFix * * * * * * * *



ARM Macro Assembler    Page 4 


  136 0000010C         
  137 0000010C                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  138 0000010C                 END                          ; end of file
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\print.
d -o.\print.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\Luminary --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --list
=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file Print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 30 in file Print.s
   Uses
      At line 14 in file Print.s
      At line 42 in file Print.s

LCD_OutFix 0000003A

Symbol: LCD_OutFix
   Definitions
      At line 64 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
ascii 0000002C

Symbol: ascii
   Definitions
      At line 45 in file Print.s
   Uses
      At line 35 in file Print.s
Comment: ascii used once
done 000000DE

Symbol: done
   Definitions
      At line 113 in file Print.s
   Uses
      At line 129 in file Print.s
Comment: done used once
greater10k 000000E4

Symbol: greater10k
   Definitions
      At line 116 in file Print.s
   Uses
      At line 72 in file Print.s
Comment: greater10k used once
loop10 000000F8

Symbol: loop10
   Definitions
      At line 122 in file Print.s
   Uses
      At line 128 in file Print.s
Comment: loop10 used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

div 00000000

Symbol: div
   Definitions
      At line 21 in file Print.s
   Uses
      At line 76 in file Print.s
      At line 81 in file Print.s
      At line 91 in file Print.s
      At line 94 in file Print.s
      At line 104 in file Print.s
      At line 107 in file Print.s

res 00000004

Symbol: res
   Definitions
      At line 20 in file Print.s
   Uses
      At line 75 in file Print.s
      At line 80 in file Print.s
      At line 90 in file Print.s
      At line 93 in file Print.s
      At line 103 in file Print.s
      At line 106 in file Print.s

val 00000000

Symbol: val
   Definitions
      At line 22 in file Print.s
   Uses
      At line 40 in file Print.s
      At line 43 in file Print.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 47 in file Print.s
      At line 77 in file Print.s
      At line 79 in file Print.s
      At line 92 in file Print.s
      At line 105 in file Print.s
      At line 112 in file Print.s
      At line 118 in file Print.s
      At line 120 in file Print.s
      At line 125 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
344 symbols in table
